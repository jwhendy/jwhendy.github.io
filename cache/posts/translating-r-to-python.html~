<div id="outline-container-orgd3a7b54" class="outline-2">
<h2 id="orgd3a7b54">Background</h2>
<div class="outline-text-2" id="text-orgd3a7b54">
<p>
I've been using <code>R</code> for at least <a href="https://stackoverflow.com/questions/9057006/getting-strings-recognized-as-variable-names-in-r">5 years</a>. Lately, I've been trying to pick up <code>python</code> as
well, which is quite the learning experience! I've been through some tutorials (or pieces
of them) from <a href="http://greenteapress.com/thinkpython/html/index.html"><i>think python</i></a> and <a href="https://learnpythonthehardway.org/">lpthw</a>, as well as <a href="https://www.coursera.org/learn/python">classes on Coursera</a>. With some basics
under my belt, I started getting into <code>numpy</code> and <code>pandas</code>, which is where things got
tricky. I can vaguely recall a time in my <code>R</code> Padawan days when I had a sense of what I
wanted to do, but didn't know enough to even formulate the question correctly. I also find
I don't learn well by just reading docs. I want to poke and prod around, trying to wrap my
head around what I'm reading. For example, I ran across the the function <code>tolist()</code> via
<a href="https://stackoverflow.com/questions/34898159/python-pandas-series-combine-the-rows">SO</a>, but have no idea how to interpret <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.tolist.html">this</a> as it is:
</p>

<pre class="example">
Series.tolist()
  Convert Series to a nested list
</pre>

<p>
I thought a <code>pd.Series</code> was just like an <code>R</code> vector; why would it be "nestable" in the
first place? What is a nested list and why do I want that? Some <a href="https://stackoverflow.com/questions/23748995/pandas-dataframe-to-list">examples</a> just show that it
converts from a <code>pd.Series</code> to a list. I don't see any "nesting," but then don't know what
that is.
</p>

<p>
In any case, the point is that instead of trying to just learn <code>pandas</code> in some linear
way, I thought it might be more effective to simply take some <code>R</code> code and translate it to
<code>python</code>. I know what I want to know and the tools I would use in <code>R</code>, so getting my brain
around how to do the same in <code>python</code> seemed like an interesting way to learn. Whatever I
pickup will be relevant (I'm already doing these sorts of tasks), and the learning is more
targetted (I'm extracting the small % of information I need vs. trying to digest things I
likely will never use).
</p>

<!-- TEASER_END -->
</div>
</div>

<div id="outline-container-orge0c93d1" class="outline-2">
<h2 id="orge0c93d1">The challenge</h2>
<div class="outline-text-2" id="text-orge0c93d1">
<p>
The data consists of some raw test data from a sensor. I've anonymized what it is, but the
gist is as follows:
</p>

<ul class="org-ul">
<li>I start logging data via USB at 1000 Hz</li>
<li>The test begins and I get the data of interest</li>
<li>I stop logging that sample</li>
</ul>

<p>
Because the logging software and machine don't communicate, I end up with varying amounts
of baseline, nominally zero data before the test occurs. Once it's over, I have a "tail"
of unknown length after the test is complete. I tend to have anywhere between 5-25 tests,
and I want to align their starts for plotting/analysis. I've created a sample dataset <a href="../../data/r-to-python-data.csv">here</a>
if you want to follow along.
</p>
</div>
</div>

<div id="outline-container-org70f82f0" class="outline-2">
<h2 id="org70f82f0">Using R</h2>
<div class="outline-text-2" id="text-org70f82f0">
<p>
So you can get a sense of how I'm doing this in <code>R</code> (comments/improvements welcome!),
let's look at the raw data. <code>i</code> here is just the row number, but because of the sampling
rate it's also the time in milliseconds.
</p>

<div class="highlight"><pre><span></span><span class="kn">library</span><span class="p">(</span>ggplot2<span class="p">)</span>
<span class="kn">library</span><span class="p">(</span>reshape2<span class="p">)</span>

data <span class="o">&lt;-</span> read.csv<span class="p">(</span><span class="s">&quot;https://jwhendy.github.io/data/r-to-python-data.csv&quot;</span><span class="p">)</span>
<span class="kp">head</span><span class="p">(</span>data<span class="p">)</span>
</pre></div>

<pre class="example">
  i test_1 test_2
1 1  -0.03  -0.05
2 2  -0.03  -0.05
3 3  -0.03  -0.05
4 4  -0.03  -0.05
5 5  -0.03  -0.05
6 6  -0.03  -0.05
</pre>

<p>
If we plot it, you can see the lag I'm talking about
</p>

<div class="highlight"><pre><span></span>data_melt <span class="o">&lt;-</span> melt<span class="p">(</span>data<span class="p">,</span> id.vars <span class="o">=</span> <span class="s">&quot;i&quot;</span><span class="p">)</span>
ggplot<span class="p">(</span>data_melt<span class="p">,</span> aes<span class="p">(</span>x <span class="o">=</span> i<span class="p">,</span> y <span class="o">=</span> value<span class="p">,</span> colour <span class="o">=</span> variable<span class="p">))</span> <span class="o">+</span> geom_line<span class="p">()</span>
</pre></div>

<div class="org-center">

<div class="figure">
<p><img src="../files/img/overview.png" alt="overview.png" width="600px" />
</p>
</div>
</div>
</div>
</div>
