#+BEGIN_COMMENT
.. title: Comparing python plotting libraries
.. slug: comparing-python-plotting-libraries
.. date: 2017-12-23 13:33:34 UTC-06:00
.. tags: python,r,learning
.. category: 
.. link: 
.. description: 
.. type: text
#+END_COMMENT


* Introduction

As mentioned in a [[https://jwhendy.github.io/blog/translating-r-to-python/][previous post]], I've been trying to pick up `python`, coming from mostly
using `R` over the past 5-7 years for data analysis, stats, and a lot of plotting. I found
`python`'s plotting landscape quite a bit more confusing than I expected, with tons of
options compared to the typical reigning `R` champions: `base`, [[http://lattice.r-forge.r-project.org/][=lattice=]], and [[http://ggplot2.org/][=ggplot2=]]. 

Granted, there are a ton of other R contenders as well, such as [[https://plot.ly/r/][=plotly=]] and [[https://ramnathv.github.io/rCharts/][=rCharts=]],
but the three above are the most common. I stick almost exclusively to `ggplot2`, and
rarely find something I can't do (granted, this is typical science-y stuff, not
infographics or really complicated stuff). To educate myself, I went through and plotted a
pretty standard dataset in various ways to see how one would do it in a bunch of `python`
libraries:

- [[http://ggplot.yhathq.com/][=ggpy=]]
- [[https://matplotlib.org/][=matplotlib=]]
- [[https://seaborn.pydata.org/][=seaborn=]]
- [[https://plot.ly/python/][=plotly=]]
- [[https://plot.ly/ipython-notebooks/cufflinks/][=cufflinks=]]
- [[https://altair-viz.github.io/][=altair=]]
- [[https://bokeh.pydata.org/en/latest/][=bokeh=]]
- [[http://pygal.org/en/stable/][=pygal=]]

* The example

I started /really/ simple. Three types of plots, a simple bar, a dot plot (basically a
bar plot, but makes Tufte proud with a higher data:ink ratio), and a scatter plot colored
by group.

The bar chart in R:

#+begin_src R :session r :results silent :eval no

library(ggplot2)
data(mtcars)

df <- mtcars[1:5, ]
df$car <- rownames(df)

p <- ggplot(df, aes(x = car, y = mpg)) + geom_bar(stat="identity")

png("r_mtcars_bar.png", width=900, height=600, res=150)
p
dev.off()
#+end_src

A dot plot:

#+begin_src R :session r :results silent :eval no

p <- ggplot(df, aes(x = car, y = mpg)) + geom_point() + expand_limits(y=0)

png("r_mtcars_dot.png", width=900, height=600, res=150)
p
dev.off()

#+end_src

And lastly, we'll use a bit more data and do a colored scatter plot:

#+begin_src R :session r :results silent :eval no

df <- mtcars[1:10, ]
df$car <- rownames(df)

p <- ggplot(df, aes(x = wt, y = mpg, colour = car)) + geom_point()

png("../files/img/r_mtcars_scatter_color.png", width=900, height=600, res=150)
p
dev.off()

#+end_src

Here are our three plots:

#+begin_export html 

<table>
  <td>
    <tr>
      <img src="../files/img/r_mtcars_bar.png" width="30%" />
    </tr>
  </td>
  <td>
    <tr>
      <img src="../files/img/r_mtcars_dot.png" width="30%" />
    </tr>
  </td>
  <td>
    <tr>
      <img src="../files/img/r_mtcars_scatter_color.png" width="30%" />
    </tr>
  </td>
</table>

#+end_export

