<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jwhendy</title><link>https://jwhendy.github.io/</link><description>Knowledge, sleep, food and coffee go in; this type of stuff comes out.</description><atom:link href="https://jwhendy.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2017 &lt;a href="mailto:jw.hendy@gmail.com"&gt;John Henderson&lt;/a&gt; </copyright><lastBuildDate>Sun, 27 Aug 2017 21:41:11 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Translating R to python</title><link>https://jwhendy.github.io/blog/translating-r-to-python/</link><dc:creator>John Henderson</dc:creator><description>&lt;div id="outline-container-orge1bb338" class="outline-2"&gt;
&lt;h2 id="orge1bb338"&gt;Background&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge1bb338"&gt;
&lt;p&gt;
I've been using &lt;code&gt;R&lt;/code&gt; for at least &lt;a href="https://stackoverflow.com/questions/9057006/getting-strings-recognized-as-variable-names-in-r"&gt;5 years&lt;/a&gt;. Lately, I've been trying to pick up &lt;code&gt;python&lt;/code&gt; as
well, which is quite the learning experience! I've been through some tutorials (or pieces
of them) from &lt;a href="http://greenteapress.com/thinkpython/html/index.html"&gt;&lt;i&gt;think python&lt;/i&gt;&lt;/a&gt; and &lt;a href="https://learnpythonthehardway.org/"&gt;lpthw&lt;/a&gt;, as well as &lt;a href="https://www.coursera.org/learn/python"&gt;classes on Coursera&lt;/a&gt;. With some basics
under my belt, I started getting into &lt;code&gt;numpy&lt;/code&gt; and &lt;code&gt;pandas&lt;/code&gt;, which is where things got
tricky. I can vaguely recall a time in my &lt;code&gt;R&lt;/code&gt; Padawan days when I had a sense of what I
wanted to do, but didn't know enough to even formulate the question correctly. I also find
I don't learn well by just reading docs. I want to poke and prod around, trying to wrap my
head around what I'm reading. For example, I ran across the the function &lt;code&gt;tolist()&lt;/code&gt; via
&lt;a href="https://stackoverflow.com/questions/34898159/python-pandas-series-combine-the-rows"&gt;SO&lt;/a&gt;, but have no idea how to interpret &lt;a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.tolist.html"&gt;this&lt;/a&gt; as it is:
&lt;/p&gt;

&lt;pre class="example"&gt;
Series.tolist()
  Convert Series to a nested list
&lt;/pre&gt;

&lt;p&gt;
I thought a &lt;code&gt;pd.Series&lt;/code&gt; was just like an &lt;code&gt;R&lt;/code&gt; vector; why would it be "nestable" in the
first place? What is a nested list and why do I want that? Some &lt;a href="https://stackoverflow.com/questions/23748995/pandas-dataframe-to-list"&gt;examples&lt;/a&gt; just show that it
converts from a &lt;code&gt;pd.Series&lt;/code&gt; to a list. I don't see any "nesting," but then don't know what
that is.
&lt;/p&gt;

&lt;p&gt;
In any case, the point is that instead of trying to just learn &lt;code&gt;pandas&lt;/code&gt; in some linear
way, I thought it might be more effective to simply take some &lt;code&gt;R&lt;/code&gt; code and translate it to
&lt;code&gt;python&lt;/code&gt;. I know what I want to know and the tools I would use in &lt;code&gt;R&lt;/code&gt;, so getting my brain
around how to do the same in &lt;code&gt;python&lt;/code&gt; seemed like an interesting way to learn. Whatever I
pickup will be relevant (I'm already doing these sorts of tasks), and the learning is more
targetted (I'm extracting the small % of information I need vs. trying to digest things I
likely will never use).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd12aae1" class="outline-2"&gt;
&lt;h2 id="orgd12aae1"&gt;The challenge&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd12aae1"&gt;
&lt;p&gt;
The data consists of some raw test data from a sensor. I've anonymized what it is, but the
gist is as follows:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;I start logging data via USB at 1000 Hz&lt;/li&gt;
&lt;li&gt;The test begins and I get the data of interest&lt;/li&gt;
&lt;li&gt;I stop logging that sample&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Because the logging software and machine don't communicate, I end up with varying amounts
of baseline, nominally zero data before the test occurs. Once it's over, I have a "tail"
of unknown length after the test is complete. I tend to have anywhere between 5-25 tests,
and I want to align their starts for plotting/analysis. I've created a sample dataset &lt;a href="https://jwhendy.github.io/blog/files/r-to-python-data.csv"&gt;here&lt;/a&gt;
if you want to follow along.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org61d58fa" class="outline-2"&gt;
&lt;h2 id="org61d58fa"&gt;Using R&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org61d58fa"&gt;
&lt;p&gt;
So you can get a sense of how I'm doing this in &lt;code&gt;R&lt;/code&gt; (comments/improvements welcome!),
let's look at the raw data:
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;reshape2&lt;span class="p"&gt;)&lt;/span&gt;

data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"r-to-python-data.csv"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://jwhendy.github.io/blog/translating-r-to-python/</guid><pubDate>Sun, 27 Aug 2017 20:52:28 GMT</pubDate></item><item><title>kicking off a github site with nikola</title><link>https://jwhendy.github.io/blog/2017-05-15-kick-off/</link><dc:creator>John Henderson</dc:creator><description>&lt;p&gt;
trying to see how this works
&lt;/p&gt;</description><category>first</category><category>github</category><category>nikola</category><guid>https://jwhendy.github.io/blog/2017-05-15-kick-off/</guid><pubDate>Mon, 15 May 2017 20:12:47 GMT</pubDate></item></channel></rss>